{
  "_args": [
    [
      {
        "raw": "parse-author@^2.0.0",
        "scope": null,
        "escapedName": "parse-author",
        "name": "parse-author",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\Gregory\\WebstormProjects\\electron-layers\\node_modules\\electron-packager"
    ]
  ],
  "_from": "parse-author@>=2.0.0 <3.0.0",
  "_id": "parse-author@2.0.0",
  "_inCache": true,
  "_location": "/parse-author",
  "_nodeVersion": "7.6.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/parse-author-2.0.0.tgz_1488974872374_0.6180101195350289"
  },
  "_npmUser": {
    "name": "jonschlinkert",
    "email": "github@sellside.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "parse-author@^2.0.0",
    "scope": null,
    "escapedName": "parse-author",
    "name": "parse-author",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/electron-packager"
  ],
  "_resolved": "https://registry.npmjs.org/parse-author/-/parse-author-2.0.0.tgz",
  "_shasum": "d3460bf1ddd0dfaeed42da754242e65fb684a81f",
  "_shrinkwrap": null,
  "_spec": "parse-author@^2.0.0",
  "_where": "C:\\Users\\Gregory\\WebstormProjects\\electron-layers\\node_modules\\electron-packager",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/parse-author/issues"
  },
  "contributors": [
    {
      "name": "Jon Schlinkert",
      "email": "jon.schlinkert@sellside.com",
      "url": "http://twitter.com/jonschlinkert"
    },
    {
      "name": "Sean Lang",
      "email": "slang800@gmail.com",
      "url": "http://slang.cx"
    },
    {
      "name": "Tim Oram",
      "email": "mitmaro@gmail.com",
      "url": "http://www.mitmaro.ca"
    }
  ],
  "dependencies": {
    "author-regex": "^1.0.0"
  },
  "description": "Parse an author, contributor, maintainer or other 'person' string into an object with name, email and url properties following npm conventions.",
  "devDependencies": {
    "mocha": "^3.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "d3460bf1ddd0dfaeed42da754242e65fb684a81f",
    "tarball": "https://registry.npmjs.org/parse-author/-/parse-author-2.0.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "dc5528d371661331006cfb5b8301f151a5071f49",
  "homepage": "https://github.com/jonschlinkert/parse-author",
  "keywords": [
    "author",
    "authors",
    "contributor",
    "exec",
    "expression",
    "extract",
    "maintainer",
    "maintainers",
    "match",
    "package",
    "parse",
    "person",
    "pkg",
    "re",
    "regex",
    "regexp",
    "regular",
    "somebody"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jonschlinkert",
      "email": "github@sellside.com"
    },
    {
      "name": "slang",
      "email": "slang800@gmail.com"
    }
  ],
  "name": "parse-author",
  "optionalDependencies": {},
  "readme": "# parse-author [![NPM version](https://img.shields.io/npm/v/parse-author.svg?style=flat)](https://www.npmjs.com/package/parse-author) [![NPM monthly downloads](https://img.shields.io/npm/dm/parse-author.svg?style=flat)](https://npmjs.org/package/parse-author)  [![NPM total downloads](https://img.shields.io/npm/dt/parse-author.svg?style=flat)](https://npmjs.org/package/parse-author) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/parse-author.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/parse-author)\n\n> Parse a string into an object with `name`, `email` and `url` properties following npm conventions. Useful for the `authors` property in package.json or for parsing an AUTHORS file into an array of authors objects.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save parse-author\n```\n\n## Usage\n\n```js\nvar parse = require('parse-author');\n```\n\n## Supported formats\n\nWorks with a flexible range of formats, any of the properties can be used or missing:\n\n```\nName\nName <email> (url)\nName <email>(url)\nName<email> (url)\nName<email>(url)\nName (url) <email>\nName (url)<email>\nName(url) <email>\nName(url)<email>\nName (url)\nName(url)\nName <email>\nName<email>\n<email> (url)\n<email>(url)\n(url) <email>\n(url)<email>\n<email>\n(url)\n```\n\n## Examples\n\n```js\nvar author = parse('Jon Schlinkert <jon.schlinkert@sellside.com> (https://github.com/jonschlinkert)');\nconsole.log(author);\n//=> {name: 'Jon Schlinkert', email: 'jon.schlinkert@sellside.com', url: 'https://github.com/jonschlinkert'}\n\nconsole.log(parse('Jon Schlinkert (https://github.com/jonschlinkert)'));\n//=> {name: 'Jon Schlinkert', url: 'https://github.com/jonschlinkert'}\n\nconsole.log(parse('Jon Schlinkert <jon.schlinkert@sellside.com>'));\n//=> {name: 'Jon Schlinkert', email: 'jon.schlinkert@sellside.com'}\n\nconsole.log(parse(''));\n//=> {}\n```\n\n## About\n\n### Related projects\n\n* [author-regex](https://www.npmjs.com/package/author-regex): Regular expression for parsing an `author` string into an object following npm conventions. | [homepage](https://github.com/jonschlinkert/author-regex \"Regular expression for parsing an `author` string into an object following npm conventions.\")\n* [parse-authors](https://www.npmjs.com/package/parse-authors): Parse a string into an array of objects with `name`, `email` and `url` properties following… [more](https://github.com/jonschlinkert/parse-authors) | [homepage](https://github.com/jonschlinkert/parse-authors \"Parse a string into an array of objects with `name`, `email` and `url` properties following npm conventions. Useful for the `authors` property in package.json or for parsing an AUTHORS file into an array of authors objects.\")\n* [stringify-author](https://www.npmjs.com/package/stringify-author): Stringify an authors object to `name <email> (url)`. | [homepage](https://github.com/jonschlinkert/stringify-author \"Stringify an authors object to `name <email> (url)`.\")\n* [stringify-authors](https://www.npmjs.com/package/stringify-authors): Converts an author object or array of author objects into an array of strings. Useful… [more](https://github.com/jonschlinkert/stringify-authors) | [homepage](https://github.com/jonschlinkert/stringify-authors \"Converts an author object or array of author objects into an array of strings. Useful for adding authors, maintainers or contributors to documentation, package.json or a readme.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 14 | [slang800](https://github.com/slang800) |\n| 12 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 1 | [MitMaro](https://github.com/MitMaro) |\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.4.3, on March 08, 2017._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/parse-author.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "run": true,
    "toc": false,
    "layout": "default",
    "tasks": [
      "readme"
    ],
    "plugins": [
      "gulp-format-md"
    ],
    "related": {
      "list": [
        "author-regex",
        "parse-authors",
        "stringify-author",
        "stringify-authors"
      ]
    },
    "reflinks": [
      "verb"
    ],
    "lint": {
      "reflinks": true
    }
  },
  "version": "2.0.0"
}
