{
  "_args": [
    [
      {
        "raw": "electron@~1.6.2",
        "scope": null,
        "escapedName": "electron",
        "name": "electron",
        "rawSpec": "~1.6.2",
        "spec": ">=1.6.2 <1.7.0",
        "type": "range"
      },
      "C:\\Users\\Gregory\\WebstormProjects\\electron-quick-start"
    ]
  ],
  "_from": "electron@>=1.6.2 <1.7.0",
  "_id": "electron@1.6.13",
  "_inCache": true,
  "_location": "/electron",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/electron-1.6.13.tgz_1504727810083_0.6216499640140682"
  },
  "_npmUser": {
    "name": "electron",
    "email": "electron@github.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "electron@~1.6.2",
    "scope": null,
    "escapedName": "electron",
    "name": "electron",
    "rawSpec": "~1.6.2",
    "spec": ">=1.6.2 <1.7.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/electron/-/electron-1.6.13.tgz",
  "_shasum": "403c8e04477aca6d569d2348358046f0641d5f5c",
  "_shrinkwrap": null,
  "_spec": "electron@~1.6.2",
  "_where": "C:\\Users\\Gregory\\WebstormProjects\\electron-quick-start",
  "author": {
    "name": "Mathias Buus"
  },
  "bin": {
    "electron": "cli.js"
  },
  "bugs": {
    "url": "https://github.com/electron-userland/electron-prebuilt/issues"
  },
  "dependencies": {
    "@types/node": "^7.0.18",
    "electron-download": "^3.0.1",
    "extract-zip": "^1.0.3"
  },
  "description": "Install prebuilt electron binaries for the command-line using npm",
  "devDependencies": {
    "home-path": "^0.1.1",
    "path-exists": "^2.0.0",
    "standard": "^5.4.1",
    "tape": "^3.0.1"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "integrity": "sha512-BokXeIANSBNIH68fCvBCb982kgJraSHK3UQ6Ykcf4GtFtdF0NJlK7OmrQJdHRtjzIc1qCVP/87RXE6ny0A8cVA==",
    "shasum": "403c8e04477aca6d569d2348358046f0641d5f5c",
    "tarball": "https://registry.npmjs.org/electron/-/electron-1.6.13.tgz"
  },
  "gitHead": "22840dc54d4f6ed7e39ba755a0a42b54cdff97cc",
  "homepage": "https://github.com/electron-userland/electron-prebuilt#readme",
  "keywords": [
    "electron"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "electron",
      "email": "electron@github.com"
    }
  ],
  "name": "electron",
  "optionalDependencies": {},
  "readme": "# electron-prebuilt\n\n[![Travis build status](http://img.shields.io/travis/electron-userland/electron-prebuilt.svg?style=flat)](http://travis-ci.org/electron-userland/electron-prebuilt)\n[![AppVeyor build status](https://ci.appveyor.com/api/projects/status/hxcd9vcdn9hr0b3y/branch/master?svg=true)](https://ci.appveyor.com/project/electron-bot/electron-prebuilt/branch/master)\n\n[![badge](https://nodei.co/npm/electron.png?downloads=true)](https://www.npmjs.com/package/electron)\n\nInstall [Electron](https://github.com/electron/electron) prebuilt binaries for\ncommand-line use using npm. This module helps you easily install the `electron`\ncommand for use on the command line without having to compile anything.\n\n[Electron](http://electron.atom.io) is a JavaScript runtime that bundles Node.js\nand Chromium. You use it similar to the `node` command on the command line for\nexecuting JavaScript programs. For more info you can read [this intro blog post](http://maxogden.com/electron-fundamentals.html)\nor dive into the [Electron documentation](http://electron.atom.io/docs).\n\n## Installation\n\n**Note** As of version 1.3.1, this package is published to npm under two names:\n`electron` and `electron-prebuilt`. You can currently use either name, but\n`electron` is recommended, as the `electron-prebuilt` name is deprecated, and\nwill only be published until the end of 2016.\n\nDownload and install the latest build of Electron for your OS and add it to your\nproject's `package.json` as a `devDependency`:\n\n```shell\nnpm install electron --save-dev\n```\n\nThis is the preferred way to use Electron, as it doesn't require users to\ninstall Electron globally.\n\nYou can also use the `-g` flag (global) to symlink it into your PATH:\n\n```shell\nnpm install -g electron\n```\n\nIf that command fails with an `EACCESS` error you may have to run it again with `sudo`:\n\n```shell\nsudo npm install -g electron\n```\n\nNow you can just run `electron` to run electron:\n\n```shell\nelectron\n```\n\nIf you need to use an HTTP proxy you can [set these environment variables](https://github.com/request/request/tree/f0c4ec061141051988d1216c24936ad2e7d5c45d#controlling-proxy-behaviour-using-environment-variables).\n\nIf you want to change the architecture that is downloaded (e.g., `ia32` on an\n`x64` machine), you can use the `--arch` flag with npm install or set the\n`npm_config_arch` environment variable:\n\n```shell\nnpm install --arch=ia32 electron\n```\n\nIf you need to force a re-download of the asset and the SHASUM file set the `force_no_cache` enviroment variable to true.\n\n## About\n\nWorks on Mac, Windows and Linux OSes that Electron supports (e.g. Electron\n[does not support Windows XP](https://github.com/electron/electron/issues/691)).\n\nThe version numbers of this module match the version number of the [official\nElectron releases](https://github.com/electron/electron/releases), which\n[do not follow semantic versioning](http://electron.atom.io/docs/tutorial/electron-versioning/).\n\nThis module is automatically released whenever a new version of Electron is\nreleased thanks to [electron-prebuilt-updater](https://github.com/electron/electron-prebuilt-updater),\noriginally written by [John Muhl](https://github.com/johnmuhl/).\n\n## Usage\n\nFirst, you have to [write an Electron application](http://electron.atom.io/docs/tutorial/quick-start/).\n\nThen, you can run your app using:\n\n```shell\nelectron your-app/\n```\n\n## Related modules\n\n- [electron-packager](https://github.com/electron-userland/electron-packager) -\n  Package and distribute your Electron app with OS-specific bundles\n  (.app, .exe etc)\n- [electron-builder](https://github.com/electron-userland/electron-builder) -\n  create installers\n- [menubar](https://github.com/maxogden/menubar) - high level way to create\n  menubar desktop applications with electron\n\nFind more at the [awesome-electron](https://github.com/sindresorhus/awesome-electron) list.\n\n## Programmatic usage\n\nMost people use this from the command line, but if you require `electron` inside\nyour **Node app** (not your Electron app) it will return the file path to the\nbinary. Use this to spawn Electron from Node scripts:\n\n```javascript\nvar electron = require('electron')\nvar proc = require('child_process')\n\n// will print something similar to /Users/maf/.../Electron\nconsole.log(electron)\n\n// spawn Electron\nvar child = proc.spawn(electron)\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/electron-userland/electron-prebuilt.git"
  },
  "scripts": {
    "cache-clean": "rm -rf ~/.electron && rm -rf dist",
    "postinstall": "node install.js",
    "pretest": "npm run cache-clean && npm run postinstall",
    "test": "tape test/*.js && standard"
  },
  "types": "electron.d.ts",
  "version": "1.6.13"
}
